class Solution:
    def trailingZeroes(self, n):
        """
        :type n: int
        :rtype: int
        """
        '''
        要求末尾有多少个零，则该数应为x*10k 的形式等于x*（2k *5k） 
        [1, n]范围内2的数量远远大于5的数量，因此有多少个5，乘积末尾就有多少个0。
        2147483647!=2 * 3 * ...* 5 ... *10 ... 15* ... * 25 ... * 50 ... * 125 ... * 250...
                   =2 * 3 * ...* 5 ... * (5^1*2)...(5^1*3)...*(5^2*1)...*(5^2*2)...*(5^3*1)...*(5^3*2)...
        5中包含1个5，25中包含2个5，125中包含3个5……
        因此结果就是：n/5 + n/25 + n/125 + n/625 + n/3125+...
        注意，虽然25中包含了2个5，但其中一个5已经在n / 5中被计算过，后续同理
        '''
        result=0
        while n>0:
            n=n//5
            result=result+n
        return result
Solution().trailingZeroes(30)
